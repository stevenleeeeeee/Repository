groups:   包含了所有Hosts文件里面主机组的一个列表
group_names:  包含了当前主机所在的所有主机组名的一个列表
inventory_hostname:   通过Hosts文件定义主机的主机名和ansible_home不一定相同
play_hosts:   将会执行当前任务的所有主机

主机地址
ansible_ens33["ipv4"]["address"]
ansible_facts["ansible_all_ipv4_addresses"]

获取版本号的前N个字符：{{ ansible_distribution[N] }}

输出所有主机清单里的主机
debug: msg={{ item }}
with_items: "{{ groups['all'] }}"

输出主机清单中不在www中的所有主机
debug: msg={{ item }}
with_inventory_hostnames: all:!www

---------------------------------------------------------------- Ansible 内置高级变量：hostvars, group_names, groups 
主机：
  [DB_cluster]
  192.168.111.222 hostnameA
  192.168.111.211 hostnameB

模板：
  {% for X in groups['DB_cluster'] %}
   {{ hostvars[X]['ansible_all_ipv4_addresses'][0] }} {{ hostvars[X]['ansible_hostname'] }}
  {% endfor %}

输出：
  192.168.111.222 hostnameA
  192.168.111.211 hostnameB
  
  [webservers]
  server1 city=amsterdam
  server2 city=london
  server3 city=shanghai
  
  hosts {{ hostvars['server3'].city }}          #每个主机都输出server3的变量shanghai
---------------------------------------------------------------- 

  {% for v in hostvars.iteritems() %}           #输出每个元素各自的主机名?
   {{ v['ansible_hostname'] }}
  {% endfor %}

---------------------------------------------------------------- 

在首次连接或者重装系统之后会出现检查keys的提示：
The authenticity of host '192.168.0.5 (192.168.0.5)' can't be established.
ECDSA key fingerprint is 05:51:e5:c4:d4:66:9b:af:5b:c9:ba:e9:e6:a4:2b:fe.
Are you sure you want to continue connecting (yes/no)?

解决办法:
vim /etc/ansible/ansible.cfg 或者~/.ansible.cfg
[defaults]
host_key_checking = False

也可以通过设置系统环境变量来禁止这样的提示：
export ANSIBLE_HOST_KEY_CHECKING=False
