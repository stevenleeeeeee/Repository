input {
  kafka {
    bootstrap_servers => "192.168.190.148:9092,192.168.190.149:9092,192.168.190.150:9092,192.168.190.151:9092,192.168.190.152:9092"
    topics => "interfacelog"
    group_id => "logstash-interfacelog-transfer-yml"
    max_partition_fetch_bytes=> "5242880"
    consumer_threads => "10"
    codec => "json"
  }
}

filter {
  if[trdngTime]{
   ruby {
     code => 'event.set("logdate", Time.at(event.get("trdngTime")/1000+8*60*60).to_s)'
   }
  }
  if[logdate]{
   date {
     match => ["logdate", "yyyy-MM-dd HH:mm:ss Z"]
     target => "@timestamp"
   }
   ruby {  
     code =>'event.set("timeDistance", (event.get("@timestamp")-::Time.now).abs - 3 * 24 * 3600)'  
   } 
   mutate {
     remove_field => [ "logdate", "@version", "host", "path", "tags", "message" ]
   }
  }
}

output {
  if[timeDistance] and [timeDistance] < 0 {
  csv {
      path => "/data/devopses_sftp/download/interface/%{+YYYY-MM-dd}/interface.%{+YYYY-MM-dd}_%{+HH}.txt.gz"
      fields => ["clientSN", "lgTypeCd", "msgType", "proCode", "cltptTrdngSwftno", "crtTime", "excpLgCntt", "number", "pltfTrdngSwftno", "proName", "msgCntt", "servptTrdngSwftno", "intfId", "hostIp", "appName", "inChnlId", "serverSN", "trdngTime", "trstchIntfName", "phone", "systemCode", "tradeStatus", "name", "trdngStsCd", "interfaceId", "sysLgId", "trstchIntfId", "intfName"]
      csv_options => {"col_sep" => "|"}
      gzip => true
    }
  }
}
