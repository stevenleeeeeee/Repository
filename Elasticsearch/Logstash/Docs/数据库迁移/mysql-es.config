input {
jdbc {
      jdbc_driver_library => "/tmp/mysql-connector-java-5.1.32.jar"
      jdbc_driver_class => "com.mysql.jdbc.Driver"
      jdbc_connection_string => "jdbc:mysql://192.168.157.50:23005/esdata?characterEncoding=UTF-8&useSSL=false"
      jdbc_user => "esdata"
      jdbc_password => "u%3Zd2HqF&"
      lowercase_column_names => fals
      #clean_run => true
      #tracking_column => "CRT_TIME"	#时间字段
      #tracking_column_type => "timestamp"
      #use_column_value => true
      jdbc_page_size => 50000
      jdbc_paging_enabled => true
      jdbc_default_timezone => "Asia/Shanghai"
      statement_filepath => "/home/devopses/logstash2/run-config/sql/DB.sql"
    }
}

filter {
  if[CRT_TIME]{
   ruby {
     code => 'event.set("logdate", (Time.parse(event.get("CRT_TIME")) + 8 * 60 * 60).to_s)'
   }
  }
  if[logdate]{
   date {
     match => ["logdate", "yyyy-MM-dd HH:mm:ss Z"]
     target => "@timestamp"
   }
   ruby {
     code =>'event.set("timeDistance", (event.get("@timestamp")-::Time.now).abs - 12 * 30 * 24 * 3600)'
   }
   mutate {
     remove_field => [ "logdate", "@version", "host", "path", "tags", "message" ]
   }
  }
   ruby {
    code =>'event.set("load_time", ::Time.now.strftime("%Y-%m-%d %H:%M:%S"))'
  }
}

output {
    file {
	path => "/data/mysql_es.log"
	flush_interval => 0
    }
}

output {
    if[timeDistance] and [timeDistance] < 0 {
        elasticsearch {
            hosts => ["192.168.190.190:8221", "192.168.190.191:8221", "192.168.190.191:8222"]
            index => "ngbusi_interface_%{+YYYY_MM}"
            document_type => "interface"
            action => "index"
            codec => "json"
        }
    }else{
        file {
            path => "/data/mysql_es_error.log"
            flush_interval => 0
        }
    }
}

