#注，部署此项目前root已经调整过ES要求的内核参数

[elastic]
10.0.0.4 role=master
10.0.0.5 role=master
10.0.0.6 role=master
10.0.0.7 

[elastic:vars]
ansible_ssh_private_key_file=/home/wangyu/.ssh/id_rsa
role=data
elastic_cluster_master_address='[\"10.0.0.4:19300\",\"10.0.0.5:19300\",\"10.0.0.6:19300\"]'
-------------------------------------------------  check ---------------------------------------------------------
ansible-playbook -i ./hosts elastic.yaml --check
------------------------------------------------ playbook  ----------------------------------------------------------
- hosts: elastic
  remote_user: wangyu
  vars:
    dest_path: "/home/wangyu"
    es_cluster_name: "ES-CLUSTER"
  tasks:
    - name: transfer elastic file
      copy: src=/home/wangyu/{{ item }} dest={{ dest_path }}
      items:
        - elasticsearch-cluster-5.5.0.tar.gz
        - start.sh
    - name: edit elastic configure
      template: src=/home/wangyu/setup.sh.j2 dest={{ dest_path }}/setup.sh force=yes
    - name: edit elastic config
      shell: cd {{ dest_path }} && bash setup.sh
    - name: start
      shell: cd {{ dest_path }} && bash start.sh
      tags:
        - start
----------------------------------------------- setup.sh.j2 -----------------------------------------------------------
#!/bin/bash
#注意！脚本执行之前需要确定本机的内核参数已经调整为ES需要的值
#当前脚本需要与打包的项目在相同的路径下

set -e
set -x

#head_address="本机IP地址"
#es_cluster_name="ES加入的集群名称"
#es_node_name="ES的Node名字"
#es_network_host="ES的本机IP地址"
#es_transport_tcp_port="port"
#es_discovery_zen_ping_unicast_hosts="[\"1.1.1.1:19300\"]"

head_address="$(/usr/sbin/ip r g 1 | awk 'NR==1{print $NF}')"
es_cluster_name="{{ es_cluster_name }}"
es_node_name=$(/usr/sbin/ip r g 1 | awk 'NR==1{print $NF}'|cut -d . -f 3,4){{ role }}   #IP地址后两段+集群角色
es_network_host="$(/usr/sbin/ip r g 1 | awk 'NR==1{print $NF}')"     #获取出口IP地址
es_transport_tcp_port="19300"
es_discovery_zen_ping_unicast_hosts={{ elastic_cluster_master_address }}

origin_path=$(pwd)

tar -zxf elasticsearch-cluster-5.5.0.tar.gz 1> /dev/null 2>&1

#设置JAVA_HOME变量
rm -rf elasticsearch/jdk
echo "#ES_CLUSTER_VARIABLES" >> ~/.bash_profile
cd elasticsearch/jdk1.8.0_101/bin
export PATH=$(pwd):$PATH   #不能存在相同的JAVA_HOME变量，此处仅将JAVA_HOME/bin加入PATH中
echo "export PATH=$PATH" >> ~/.bash_profile

#修改配置文件：

role={{ role }}
[[ "$role" == "master"]] && master_condition=true || master_condition=false
[[ "$role" == "data"]] && data_condition=true || data_condition=false

cd $origin_path
cat > elasticsearch/elasticsearch-5.5.0/config/elasticsearch.yml <<eof
cluster.name: ${es_cluster_name}
node.name: ${es_node_name}
network.host: $es_network_host
transport.tcp.port: 19300
http.port: 9200
http.cors.enabled: true
http.cors.allow-origin: "*"
node.master: ${master_condition}
node.data: ${data_condition}
discovery.zen.ping.unicast.hosts: ["10.0.0.4:19300","10.0.0.5:19300","10.0.0.6:19300","10.0.0.7:19300"]
# ${es_discovery_zen_ping_unicast_hosts}
eof


#重新创建软连接，避免旧的软连接失效
rm -rf elasticsearch/head
cd elasticsearch && ln -s elasticsearch-head-master head
cd ..

cd elasticsearch/node-v8.1.4-linux-x64/bin
echo "#ES_CLUSTER_VARIABLES" >> ~/.bash_profile
export PATH=$(pwd):$PATH
echo "export PATH=$PATH:/usr/sbin" >> ~/.bash_profile

cd $origin_path

sed -i "4354s/10.0.0.4/${head_address}/" elasticsearch/head/_site/app.js 

----------------------------------------------- start.sh -----------------------------------------------------------
#!/bin/bash

#启动ES：
origin_path=$(pwd)
source ~/.bash_profile
cd elasticsearch/elasticsearch-5.5.0/bin/
./elasticsearch -d

#启动HEAD
cd $origin_path
cd elasticsearch/head/node_modules/grunt/bin/
nohup ./grunt server 1> /dev/null 2>&1  &

:
exit 0
