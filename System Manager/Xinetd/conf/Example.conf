service telnet                            # 定义服务名
{   
  bind            = 192.168.1.1           # 绑定在本机的哪张网卡上
  only_from       = 192.168.1.0/24        # 允许的C端来源
  only_from       = .test.com             # 允许特定域的C端
  access_times    = 1:00-9:00 20:00-23:00 # 提供服务的时间段
  instances       = 90                    # 同时只允许90个独立的请求，UNLIMITED表示没有限制
  per_source      = 30                    # 限制每个源IP最大30个并发连接
   
  flags           = SENSOR                # 设置为SENSOR，拒绝条件触发后，将在全局生效，即所有被xinetd托管的服务都有效
  deny_time  = 2 
  no_access  = 192.168.0.3                # 禁止指定IP请求本服务，若其请求则xinetd所管理的全部服务2分钟内都禁止其再次访问
  
  socket_type     = stream                # 指明使用TCP服务，TCP服务：stream / UDP服务：dgram
  protocol        = tcp                   # 连接使用的通信协议
  wait            = no                    # xinetd是否等待守护进程结束才重新接管该端口 
  user            = root                  # 服务启动时的身份
  nice            = 0                     # 使用的优先级
  server          =/usr/sbin/in.telnetd   # 服务的启动程序...
  server_args     = ....                  # 启动服务时传递给其的参数...
  port            = 23                    # xinetd针对本服务所负责监听的端口
  log_on_failure  += USERID               # 错误登入时记录的内容，此处记录远程用户的ID
  log_on_success  = ....                  # 连接成功时记录到日志中的信息
  disable         = no                    # 是否关闭此服务
  
  max_load        = 2.8                   # 当系统负载达到2.8时所有服务暂时中止（此选项应在编译时加入"--with-loadavg"）
 
  log_type FILE.1 /var/log/myservice.log 8388608 15728640
  # 日志文件FILE.1临界值为8MB，到达此值时syslog文件会出现告警，到达15MB时会停止所有使用这个日志系统的服务
} 

# 赋值符号：
#   =： 表示后面的参数就是这样
#  +=： 表示后面的设为在原来的设定集合中里加入新的参数
#  -+： 表示后面的设为在原来的参数集合中舍弃这里输入的参数


# 和日志记录有关的取值：
# 值          适用日志         描述
# HOST        二者皆可         记录远程主机的地址
# USERID      二者皆可         记录远程用户的ID
# PID         log_on_success  记录服务器进程的PID
# EXIT        log_on_success  记录服务器进程的退出信息
# DURATION    log_on_success  记录任务持续的时间
# ATTEMPT     log_on_failure  记录连接失败的原因
# RECORD      log_on_failure  记录连接失败的额外的信息


# reload：
# systemctl restart  xinetd.service  

# 将wait参数设置为yes意味着由xinetd派生出的守护进程一旦启动就接管端口，xinetd会一直等待直到该守护进程自己退出...
# wait=no表示xinetd会连续监视端口，每次接到一个请求就启动守护进程的一个新副本
# 管理员应参考守护进程的手册或者xinetd的配置样例来确定使用何种配置
