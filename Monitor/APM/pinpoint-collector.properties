# collector端运行所监听的地址和端口
collector.receiver.base.ip=0.0.0.0
collector.receiver.base.port=9994

# 默认的工作线程数（下面的参数会覆盖此值）
collector.receiver.base.worker.threadSize=8
# capacity of tcp worker queue
# 默认的工作线程使用的队列大小（下面的参数会覆盖此值）
collector.receiver.base.worker.queueSize=1024
# monitoring for tcp worker
# 监控工作线程状态（下面的参数会覆盖此值）
collector.receiver.base.worker.monitor=true

#接收请求、链接状态关闭的超时时间
collector.receiver.base.request.timeout=3000
collector.receiver.base.closewait.timeout=3000
#ping间隔
collector.receiver.base.ping.interval=300000
#ping等待超时时间
collector.receiver.base.pingwait.timeout=1800000 

# stat receiver config  ---------------------------------------------------------------------
#指定collector端收集状态信息使用的地址和端口，默认使用UDP
collector.receiver.stat.udp=true
collector.receiver.stat.udp.ip=0.0.0.0
collector.receiver.stat.udp.port=9995
collector.receiver.stat.udp.receiveBufferSize=4194304

# Should keep in mind that TCP transport load balancing is per connection.(UDP transport loadbalancing is per packet)
#指定collector端收集状态信息使用的地址和端口，默认情况下使用TCP协议进行收集的功能是关闭的，官方文档不建议，对性能有损耗
collector.receiver.stat.tcp=false
collector.receiver.stat.tcp.ip=0.0.0.0
collector.receiver.stat.tcp.port=9995
#接收请求、链接状态关闭的超时时间
collector.receiver.stat.tcp.request.timeout=3000
collector.receiver.stat.tcp.closewait.timeout=3000
collector.receiver.stat.tcp.ping.interval=300000
collector.receiver.stat.tcp.pingwait.timeout=1800000 

# number of udp statworker threads
# 在使用UDP协议时的状态接收工作线程数量
collector.receiver.stat.worker.threadSize=8
# 工作线程使用的队列大小
collector.receiver.stat.worker.queueSize=64
# 监控工作线程状态
collector.receiver.stat.worker.monitor=true


# span receiver config  ---------------------------------------------------------------------
# 当接收span标记的UDP协议时使用的IP地址和端口及接收区缓冲大小
collector.receiver.span.udp=true
collector.receiver.span.udp.ip=0.0.0.0
collector.receiver.span.udp.port=9996
collector.receiver.span.udp.receiveBufferSize=4194304

# Should keep in mind that TCP transport load balancing is per connection.(UDP transport loadbalancing is per packet)
# 同上，不过这里是使用TCP，并且默认是关闭的
collector.receiver.span.tcp=false
collector.receiver.span.tcp.ip=0.0.0.0
collector.receiver.span.tcp.port=9996
collector.receiver.span.tcp.request.timeout=3000
collector.receiver.span.tcp.closewait.timeout=3000

collector.receiver.span.tcp.ping.interval=300000
collector.receiver.span.tcp.pingwait.timeout=1800000 

# number of udp statworker threads
collector.receiver.span.worker.threadSize=32
# capacity of udp statworker queue
collector.receiver.span.worker.queueSize=256
# monitoring for udp stat worker
collector.receiver.span.worker.monitor=true


# configure l4 ip address to ignore health check logs
collector.l4.ip=

# change OS level read/write socket buffer size (for linux)
#sudo sysctl -w net.core.rmem_max=
#sudo sysctl -w net.core.wmem_max=
# check current values using:
#$ /sbin/sysctl -a | grep -e rmem -e wmem

# number of agent event worker threads
# 设置agent事件工作线程数量
collector.agentEventWorker.threadSize=4
# 设置agent事件工作线程使用的队列大小
collector.agentEventWorker.queueSize=1024

# 对于状态信息来说多长时间回写一次硬盘
statistics.flushPeriod=1000

# -------------------------------------------------------------------------------------------------
# The cluster related options are used to establish connections between the agent, collector, and web in order to send/receive data between them in real time.
# You may enable additional features using this option (Ex : RealTime Active Thread Chart).
# -------------------------------------------------------------------------------------------------
# Usage : Set the following options for collector/web components that reside in the same cluster in order to enable this feature.
# 1. cluster.enable (pinpoint-web.properties, pinpoint-collector.properties) - "true" to enable
# 2. cluster.zookeeper.address (pinpoint-web.properties, pinpoint-collector.properties) - address of the ZooKeeper instance that will be used to manage the cluster
# 3. cluster.web.tcp.port (pinpoint-web.properties) - any available port number (used to establish connection between web and collector)
# -------------------------------------------------------------------------------------------------
# Please be aware of the following:
#1. If the network between web, collector, and the agents are not stable, it is advisable not to use this feature.
#   如果Web，collector和agent之间的网络不稳定，建议不要使用此功能。
#2. We recommend using the cluster.web.tcp.port option. However, in cases where the collector is unable to establish connection to the web, you may reverse this and make the web establish connection to the collector.
#   建议使用cluster.web.tcp.port选项。但是，如果收集器无法与Web建立连接，则可以将其反转并使Web建立与收集器的连接
#   In this case, you must set cluster.connect.address (pinpoint-web.properties); and cluster.listen.ip, cluster.listen.port (pinpoint-collector.properties) accordingly.

# 部署collector集群，因此将此参数设置为true
cluster.enable=true
# zookeeper集群地址
cluster.zookeeper.address=localhost
cluster.zookeeper.sessiontimeout=30000
# 当前节点collector IP地址
cluster.listen.ip=
# collector监听的端口
cluster.listen.port=
# 启动Pinpoint Collector时请确保HBase、Zookeeper都是正常启动的，否则会报错Connection Refused!

#collector.admin.password=
#collector.admin.api.rest.active=
#collector.admin.api.jmx.active=

collector.spanEvent.sequence.limit=10000

# Flink configuration
flink.cluster.enable=false
flink.cluster.zookeeper.address=localhost
flink.cluster.zookeeper.sessiontimeout=3000

collector.receiver.grpc=false
collector.receiver.grpc.ip=0.0.0.0
collector.receiver.grpc.port=9997
# number of tcp worker threads
collector.receiver.grpc.worker.threadSize=8
# capacity of tcp worker queue
collector.receiver.grpc.worker.queueSize=1024
# monitoring for tcp worker
collector.receiver.grpc.worker.monitor=true
# Milliseconds, Default 5 min
# As collector.receiver.grpc.ping.interval
collector.receiver.grpc.keepalive.time=300000
# Milliseconds, Default 30 min
# As collector.receiver.grpc.pingwait.timeout
collector.receiver.grpc.keepalive.timeout=1800000

collector.receiver.span.grpc=false
collector.receiver.span.grpc.ip=0.0.0.0
collector.receiver.span.grpc.port=9998
# Milliseconds, Default 5 min
collector.receiver.span.grpc.keepalive.time=300000
# Milliseconds, Default 30 min
collector.receiver.span.grpc.keepalive.timeout=1800000 
# number of span worker threads
collector.receiver.span.grpc.worker.threadSize=32
# capacity of span worker queue
collector.receiver.span.grpc.worker.queueSize=256
# monitoring for span worker
collector.receiver.span.grpc.worker.monitor=true

collector.receiver.stat.grpc=false
collector.receiver.stat.grpc.ip=0.0.0.0
collector.receiver.stat.grpc.port=9999
# Milliseconds, Default 5 min
collector.receiver.stat.grpc.keepalive.time=300000
# Milliseconds, Default 30 min
collector.receiver.stat.grpc.keepalive.timeout=1800000 
# number of span worker threads
collector.receiver.stat.grpc.worker.threadSize=32
# capacity of span worker queue
collector.receiver.stat.grpc.worker.queueSize=256
# monitoring for span worker
collector.receiver.stat.grpc.worker.monitor=true