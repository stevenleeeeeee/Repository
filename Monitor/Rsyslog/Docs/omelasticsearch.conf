#注意:
#  1:	使用该配置文件前，需在主配置文件 /etc/rsyslog.conf 中加载 omelasticsearch、mmjsonparse、imfile 等模块
#  2:	该配置使用v8语法，建议rsyslog版本保持在 version 8.30+

#设置本地主机ip地址变量 (目前无法准确获取到用于连接es的本机IP地址）
set $!realip = "x.x.x.x";

#定义系统消息json模板 (统一所有的系统类型日志格式)
template(name="sys_log" type="list" option.json="on") {
    constant(value="{")
    constant(value="\"timestamp\":\"")	    property(name="timereported" dateFormat="rfc3339")  # 格式化的时间戳
    constant(value="\",\"message\":\"")	    property(name="msg")                    # 消息内容
    constant(value="\",\"host\":\"")	    property(name="hostname")               # 消息发送方主机名
    constant(value="\",\"ip\":\"")	        property(name="$!realip")               # 本机IP地址
    constant(value="\",\"severity\":\"")	property(name="syslogseverity-text")    # 消息级别
    constant(value="\",\"facility\":\"")	property(name="syslogfacility-text")    # 消息类型
    constant(value="\",\"app-name\":\"")	property(name="programname")            # 应用名称
    constant(value="\",\"procid\":\"")	    property(name="procid")                 # 进程PID号码
    constant(value="\"}")
}

#定义messages的ES索引模板，注意constant值必须是常量（不能引用内置变量或者自定义变量）索引名：uds-sys-log-YY.MM.DD
template(name="uds-sys-log" type="list") {
    constant(value="uds-sys-log-")
    property(name="timereported" dateFormat="rfc3339" position.from="1" position.to="4")
    constant(value=".")
    property(name="timereported" dateFormat="rfc3339" position.from="6" position.to="7")
    constant(value=".")
    property(name="timereported" dateFormat="rfc3339" position.from="9" position.to="10")
}

#定义规则集，该规则主要是针对所有类型系统日志,用于调用相关的模板格式化日志信息
#并将日志输出到es或者其它定义外部服务比如：通过tcp 或者udp 传输到logstash
ruleset(name="fileinput"){
    #发送到 Rsyslog Server
	action(type="omfwd" Target="192.168.123.231" Port="520" Protocol="tcp" template="sys_log")  
	action(
      #使用omelasticsearch模块发送到Elasticsearch
      type="omelasticsearch"

      #ES主机地址组成的列表
      server=["es-node1:9200", "es-node2:9200", "es-node3:9200"]
      #Serverport="9200"

      #向ES发送/_cat/health进行连接检查的时间，毫秒（注意：仅验证连接，不验证集群健康状态）
      #HealthCheckTimeout="3500" 

      #将在Elasticsearch中编入索引的JSON文档。生成的字符串必须是有效的JSON
      template="sys_log"

      #是否启用Rsyslog的模板功能动态的生成索引名称，若为on，则以searchIndex为Rsyslog模板名查找并动态生成索引名称
      dynSearchIndex="on"

      #索引名称（默认"system"）,由于dynSearchIndex="on"所以此处配置的含义为调用名为uds-sys-log的模板动态生成索引
      searchIndex="uds-sys-log"
      #几乎与dynSearchIndex="on"相同
      #dynSearchType="on"

      #队列相关的设置
      queue.dequeuebatchsize="5000"
      queue.size="100000"
      queue.workerthreads="5"

      #无限重试次数
      action.resumeretrycount="-1"

      #若指定则以批量模式失败的记录将写入此文件，包括其错误原因。
      #Rsyslog本身不处理该文件，但该机制背后的想法是用户可以创建一个脚本来定期检查错误文件并做出适当的反应。
      #由于包含完整请求，因此可以简单地重新提交该脚本中的消息。
      errorfile="/var/log/omelasticsearch.log")

      #ES的批量提交功能
      #是否使用ES的批量提交event消息的功能（默认关闭，日志逐个发送。每个都在自己的HTTP请求中）
      #它将使用Elasticsearch的Bulk API在同一请求中发送多个日志
      bulkmode="on"

      #当启用了bulkmode时，maxbytes指定发送到Elasticsearch的请求正文的最大大小。
      #对日志进行批处理，直到缓冲区达到最大值或达到出列批量大小。
      #为确保Elasticsearch不会因内容长度而拒绝请求，请验证此值是否符合Elasticsearch中的http.max_content_length设置。
      #maxbytes="100m"

      #当启用了ES的HTTP authentication时，此处写入用户名
      #uid="elastic"

      #Password for Elastic basic authentication
      #pwd="changeme"
}

#根据日志类型进行判断，调用相关规则集对该类型进行处理
if $syslogfacility-text == "authpriv" then {
	#set $!index = "uds-sys-authpriv";
	call_indirect  "fileinput";
}else if $syslogfacility-text == "cron" then {
	#set $!index = "uds-sys-cron-";
	call_indirect "fileinput";
}else if $syslogfacility-text == "syslog" then {
	#set $!index = "uds-sys-syslog-";
	call_indirect "fileinput";
}else if $syslogfacility-text == "daemon" then {
	#set $!index = "uds-sys-daemon-";
	call_indirect "fileinput";
}else if $syslogfacility-text == "user" then {
	#set $!index = "uds-sys-user-";
	call_indirect "fileinput";
}else {
	stop
}


#*.*  action(type="omfwd" Target="x.x.x.x" Port="520" Protocol="tcp" template="json_lines")
