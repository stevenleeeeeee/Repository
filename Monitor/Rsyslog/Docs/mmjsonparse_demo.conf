#如果源码编译，请在运行configure脚本时指定: --enable-mmjsonparse
#如果使用yum，请安装包：yum -y install rsyslog-mmjsonparse

module(load="imfile")
module(load="mmjsonparse")
module(load="omelasticsearch")
 
template(name="CUSTOM_INDEX_NAME" type="list"){
    constant(value="logstash-")
    property(name="timereported" dateFormat="rfc3339" position.from="1" position.to="4")
    constant(value=".")
    property(name="timereported" dateFormat="rfc3339" position.from="6" position.to="7")
    constant(value=".")
    property(name="timereported" dateFormat="rfc3339" position.from="9" position.to="10")
}

template(name="CUSTOM_NGINX" type="list"){
	constant(value="{")
	constant(value="\"@timestamp\":\"")  property(name="timereported" dateFormat="rfc3339")	#获取当前时间
	constant(value="\",\"host\":\"")     property(name="hostname")							#消息发送方主机名
	constant(value="\",\"severity\":\"") property(name="syslogseverity-text")				#消息级别
	constant(value="\",\"facility\":\"") property(name="syslogfacility-text")				#消息类型
	constant(value="\",\"tag\":\"")      property(name="syslogtag" format="json")			#来自消息的Tag
	constant(value="\",\"message\":\"")  property(name="msg" format="json")					#消息
	constant(value="\"}")
}

ruleset(name="VVVVVVVVVVVV_NGINX") {
    
	#下面这一行当被读取时相当于对上面定义的名为CUSTOM_NGINX的模板输出的josn文本进行josn的序列化转换
	action(	type="mmjsonparse" name="jsonparse")

	action(	type="omelasticsearch"						#本动作需要使用到的模块，下面的选项都是属于此模块的参数。
			server="loghost.ulyaoth.net"				#ES主机地址
			serverport="9200"							#ES主机端口
			template="CUSTOM_NGINX"						#调用自定义的消息处理模板
			searchIndex="CUSTOM_INDEX_NAME"				#调用自定义的消息索引名称
			dynSearchIndex="on"							#是否动态生成索引
			errorFile="/var/log/rsyslog/ES-error.log"
    )

    #下面是自己添加的（还没有进行过验证）
    if $parsesuccess == "OK" then {
        action(type="omfile" File="/tmp/output")
    }
    else if $parsesuccess == "FAIL" then {
        action(type="omfile" File="/tmp/parsing_failure")
    }

    stop 	#最后中断处理流程
}

input(	type="imfile"
		File="/var/log/nginx/access.json"
		Tag="nginxaccess"
		PersistStateInterval="10000"
		StateFile="nginxaccess"
		Severity="info"
		MaxSubmitAtOnce="20000"
		Facility="user"
		Ruleset="VVVVVVVVVVVV_NGINX"		#最后在imput中调用规则集
)

# 一般情况下的包含关系： input(rulese(action(Template)))  注：若配置文件中没有imput() 则整个Rsyslog上下文作为input！

#------------------------------------------------------------------------------------ Demo
# 配置：~~~~~~~~~~
module(load="imuxsock")
module(load="imklog") 
module(load="mmjsonparse") 

#下面这一行当被读取时相当于对流入到本Rsyslog程序的消息的josn文本进行josn的序列化转换
action(type="mmjsonparse")	# try to parse structured logs !!!

#define a template to print field "foo"
template(name="justFoo" type="list") {
    property(name="$!foo")		#这里是读取被mmjsonparse模块解析为json结构后的特定Key的值 ("!"表示非Rsyslog自身变量? )
    constant(value="n") 		#we'll separate logs with a newline
}

action(type="omfile" template="justFoo" file="/var/log/foo")

# 测试：~~~~~~~~~~
# logger '@cee: {"foo":"bar"}'
# cat /var/log/foo		#mmjsonparse执行后输出的内容
bar

# logger 'test'
# logger '@cee: test2'
# cat /var/log/foo		#如果发送非结构化日志或无效JSON则不会添加任何内容 ( mmjsonparse 解析无效 )	
bar